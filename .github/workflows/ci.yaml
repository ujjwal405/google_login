name: CI

on:
  push:
    branches:
    - master
    paths-ignore:
    - '!**/README.md'

jobs:
  run_code_checks:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    env:
      NAME: google_login
      USER: ujjwal0
      REGISTRY: docker.io
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set Up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
        check-latest: true

    - name: Verify Dependencies
      run: go mod verify

    - name: Build
      run:  go build -v ./...

    - name: Run Go Vet
      run: go vet ./...

    - name: Install Golint
      run: go install golang.org/x/lint/golint@latest

    - name: Run Go Lint
      run: golint ./...

    - name: Run Tests
      run: go test -covermode=atomic -coverprofile=coverage.out -race ./controllers/

    - name: Check Test Coverage
      run: |
        total=$(go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+')
        if (( $(echo "$total < 25" | bc -l) )); then
           echo "code coverage $total% < 25%"
           exit 1
        fi

    - name: Login To Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build And Push Image
      uses:  docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY}}/${{ env.USER}}/${{ env.NAME}}:${{ github.sha }}
        

    - name: Trivy Scan Image
      uses: aquasecurity/trivy-action@master
      env:
        IMAGE_TAG: ${{ steps.meta.outputs.tags }}
      with:
        image-ref: '${{ env.REGISTRY}}/${{ env.USER}}/${{ env.NAME}}:${{ github.sha }}'
        ignore-unfixed: true
        format: 'sarif'
        exit-code: '0'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Sarif File
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: trivy-results.sarif

    - name: Slack Notification
      uses: act10ns/slack@v2
      if: always()
      with:
        channel: "#ci"
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
